apply plugin: 'com.android.library'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    android.libraryVariants.all { variant ->
        variant.outputs.all {
            def fileName = "xiaofangapp-mainactivity.aar"
            outputFileName = fileName
        }
    }
}

dependencies {
    //implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly files('libs/unity-classes.jar')
    //阿里云推送的主要依赖
    implementation(name: 'alicloud-android-push-3.1.9.1', ext: 'aar')
    implementation files('libs/alicloud-android-sdk-beacon-1.0.3.jar')
    implementation files('libs/alicloud-android-ut-5.4.3.jar')
    implementation files('libs/alicloud-android-utils-1.1.5.jar')
    implementation files('libs/alicloud-android-utdid-1.5.2.jar')
    //阿里云推送的辅助通道
    implementation(name: 'alicloud-android-third-push-3.1.0', ext: 'aar')
    implementation(name: 'huawei-push-2.6.3.305', ext: 'aar')
    implementation(name: 'huawei-push-base-2.6.3.305', ext: 'aar')
    implementation(name: 'meizu-push-3.8.7.1', ext: 'aar')
    implementation(name: 'third_vivopush-2.9.0.1', ext: 'aar')
    //为了使用Mob的Application
    compileOnly files('libs/MobCommons-2019.0925.1537.jar')
    compileOnly files('libs/MobTools-2019.0925.1537.jar')
}


allprojects {
    repositories {
        flatDir {
            dirs 'libs'//this way we can find the .aar file in libs folder
        }
    }
}


task makeJar(type: Jar){
    //删除 旧的.jar包 任务
    delete('build/libs/xiaofangapp-mainactivity.jar')
    //指定生成的jar名
    baseName 'xiaofangapp-mainactivity'
    //从哪里打包class文件
    from('build/intermediates/classes/release/com/youlu/xiaofangapp/')
    //打包到jar后的目录结构
    into('com/youlu/xiaofangapp/')
    //去掉不需要打包的目录和文件
    exclude('BuildConfig.class','R.class')
    //去掉R$开头的文件
    exclude{it.name.startsWith('R$')}
}
makeJar.dependsOn(build)